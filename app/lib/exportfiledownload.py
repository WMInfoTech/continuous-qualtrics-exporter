__author__ = 'jwpully'
import requests
import io

def exportfiledownload(dataCenter, survey_id, file_id, bearerToken, downloadfile=None, wrtiefile=False):
    # Export file download
    try:
        baseUrl = "https://{0}.qualtrics.com/API/v3/surveys/{1}/export-responses/{2}/file".format(dataCenter, survey_id, file_id)
        print(baseUrl)

        headers = {
            "authorization": "bearer " + bearerToken,
             "Content-Type": "application/json"
            }

        response = requests.request("GET", baseUrl, headers=headers)

        if wrtiefile is True:
            with open(downloadfile, 'wb') as f:
                for chunk in response.iter_content(chunk_size=1024):
                    if chunk:
                        f.write(chunk)

            return response.status_code
        else:
            f = io.BytesIO()
            for chunk in response.iter_content(chunk_size=1024):
                if chunk:
                    f.write(chunk)
            f.seek(0)
            return f
    except Exception as e:
        print("An error occurred while downloading your export file")
        print(str(e))
        exit(1)

if __name__ == "__main__":
    import argparse
    import os
    from configmanager import settings

    try:
        settings = settings()

        parser = argparse.ArgumentParser()
        parser.add_argument("-f", "--fileId", help="The progress id from exportprogress", default=None)
        parser.add_argument("-t", "--bearerToken", help="Token generated from gettoken", default=None)
        args = parser.parse_args()
        if args.fileId is None or args.bearerToken is None:
            print("A Bearer token and fileId are required on the command line")
            print("python exportfiledownload.py --bearerToken XXXXXXXXXX --fileId YYYYYYYYYYY")
            print("The bearerToken can be generated by running gettoken.py")
            print("The fileId can be generated by running exportprogress.py")
        else:
            print(exportfiledownload(settings['QUALTRICS_DATACENTER'], settings['QUALTRICS_SURVEYID'], args.fileId
                                     , args.bearerToken, os.path.join(settings['QUALTRICS_UPLOADPATH']
                                                                      , settings['QUALTRICS_UPLOADFILE']), True))
    except Exception as e:
        print("An error occurred while running the export file download")
        print(str(e))